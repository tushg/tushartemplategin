package errors

// Error codes are organized by component and functionality
// Format: {COMPONENT}_{OPERATION}_{TYPE}
// Examples: PRODUCT_CREATE_FAILED, USER_VALIDATION_ERROR, PAYMENT_API_ERROR

// ===== GENERAL ERROR CODES =====
const (
	// System errors
	SYSTEM_INTERNAL_ERROR = "SYSTEM_INTERNAL_ERROR"
	SYSTEM_CONFIG_ERROR   = "SYSTEM_CONFIG_ERROR"
	SYSTEM_DATABASE_ERROR = "SYSTEM_DATABASE_ERROR"
	SYSTEM_NETWORK_ERROR  = "SYSTEM_NETWORK_ERROR"
	SYSTEM_TIMEOUT_ERROR  = "SYSTEM_TIMEOUT_ERROR"
	SYSTEM_MEMORY_ERROR   = "SYSTEM_MEMORY_ERROR"
	SYSTEM_DISK_ERROR     = "SYSTEM_DISK_ERROR"
)

// ===== VALIDATION ERROR CODES =====
const (
	// General validation
	VALIDATION_REQUIRED_FIELD       = "VALIDATION_REQUIRED_FIELD"
	VALIDATION_INVALID_FORMAT       = "VALIDATION_INVALID_FORMAT"
	VALIDATION_INVALID_RANGE        = "VALIDATION_INVALID_RANGE"
	VALIDATION_INVALID_TYPE         = "VALIDATION_INVALID_TYPE"
	VALIDATION_DUPLICATE_VALUE      = "VALIDATION_DUPLICATE_VALUE"
	VALIDATION_CONSTRAINT_VIOLATION = "VALIDATION_CONSTRAINT_VIOLATION"
)

// ===== AUTHENTICATION & AUTHORIZATION ERROR CODES =====
const (
	AUTH_INVALID_CREDENTIALS      = "AUTH_INVALID_CREDENTIALS"
	AUTH_TOKEN_EXPIRED            = "AUTH_TOKEN_EXPIRED"
	AUTH_TOKEN_INVALID            = "AUTH_TOKEN_INVALID"
	AUTH_INSUFFICIENT_PERMISSIONS = "AUTH_INSUFFICIENT_PERMISSIONS"
	AUTH_ACCOUNT_LOCKED           = "AUTH_ACCOUNT_LOCKED"
	AUTH_ACCOUNT_DISABLED         = "AUTH_ACCOUNT_DISABLED"
	AUTH_SESSION_EXPIRED          = "AUTH_SESSION_EXPIRED"
)

// ===== PRODUCT SERVICE ERROR CODES =====
const (
	// Product creation
	PRODUCT_CREATE_FAILED           = "PRODUCT_CREATE_FAILED"
	PRODUCT_CREATE_VALIDATION_ERROR = "PRODUCT_CREATE_VALIDATION_ERROR"
	PRODUCT_CREATE_DUPLICATE_SKU    = "PRODUCT_CREATE_DUPLICATE_SKU"

	// Product retrieval
	PRODUCT_NOT_FOUND   = "PRODUCT_NOT_FOUND"
	PRODUCT_GET_FAILED  = "PRODUCT_GET_FAILED"
	PRODUCT_LIST_FAILED = "PRODUCT_LIST_FAILED"

	// Product update
	PRODUCT_UPDATE_FAILED           = "PRODUCT_UPDATE_FAILED"
	PRODUCT_UPDATE_VALIDATION_ERROR = "PRODUCT_UPDATE_VALIDATION_ERROR"
	PRODUCT_UPDATE_CONFLICT         = "PRODUCT_UPDATE_CONFLICT"

	// Product deletion
	PRODUCT_DELETE_FAILED           = "PRODUCT_DELETE_FAILED"
	PRODUCT_DELETE_NOT_FOUND        = "PRODUCT_DELETE_NOT_FOUND"
	PRODUCT_DELETE_CONSTRAINT_ERROR = "PRODUCT_DELETE_CONSTRAINT_ERROR"

	// Product stock
	PRODUCT_STOCK_UPDATE_FAILED    = "PRODUCT_STOCK_UPDATE_FAILED"
	PRODUCT_STOCK_INSUFFICIENT     = "PRODUCT_STOCK_INSUFFICIENT"
	PRODUCT_STOCK_INVALID_QUANTITY = "PRODUCT_STOCK_INVALID_QUANTITY"
)

// ===== DATABASE ERROR CODES =====
const (
	// Connection errors
	DB_CONNECTION_FAILED  = "DB_CONNECTION_FAILED"
	DB_CONNECTION_TIMEOUT = "DB_CONNECTION_TIMEOUT"
	DB_CONNECTION_LOST    = "DB_CONNECTION_LOST"

	// Query errors
	DB_QUERY_FAILED       = "DB_QUERY_FAILED"
	DB_QUERY_TIMEOUT      = "DB_QUERY_TIMEOUT"
	DB_QUERY_SYNTAX_ERROR = "DB_QUERY_SYNTAX_ERROR"

	// Transaction errors
	DB_TRANSACTION_FAILED   = "DB_TRANSACTION_FAILED"
	DB_TRANSACTION_ROLLBACK = "DB_TRANSACTION_ROLLBACK"
	DB_TRANSACTION_DEADLOCK = "DB_TRANSACTION_DEADLOCK"

	// Constraint errors
	DB_CONSTRAINT_VIOLATION  = "DB_CONSTRAINT_VIOLATION"
	DB_FOREIGN_KEY_VIOLATION = "DB_FOREIGN_KEY_VIOLATION"
	DB_UNIQUE_VIOLATION      = "DB_UNIQUE_VIOLATION"
	DB_NOT_NULL_VIOLATION    = "DB_NOT_NULL_VIOLATION"
)

// ===== EXTERNAL API ERROR CODES =====
const (
	// Payment service errors
	PAYMENT_API_ERROR            = "PAYMENT_API_ERROR"
	PAYMENT_API_NETWORK_ERROR    = "PAYMENT_API_NETWORK_ERROR"
	PAYMENT_API_TIMEOUT_ERROR    = "PAYMENT_API_TIMEOUT_ERROR"
	PAYMENT_API_AUTH_ERROR       = "PAYMENT_API_AUTH_ERROR"
	PAYMENT_API_RATE_LIMIT_ERROR = "PAYMENT_API_RATE_LIMIT_ERROR"
	PAYMENT_API_VALIDATION_ERROR = "PAYMENT_API_VALIDATION_ERROR"
	PAYMENT_API_SERVICE_ERROR    = "PAYMENT_API_SERVICE_ERROR"
	PAYMENT_API_UNKNOWN_ERROR    = "PAYMENT_API_UNKNOWN_ERROR"

	// Inventory service errors
	INVENTORY_API_ERROR            = "INVENTORY_API_ERROR"
	INVENTORY_API_NETWORK_ERROR    = "INVENTORY_API_NETWORK_ERROR"
	INVENTORY_API_TIMEOUT_ERROR    = "INVENTORY_API_TIMEOUT_ERROR"
	INVENTORY_API_AUTH_ERROR       = "INVENTORY_API_AUTH_ERROR"
	INVENTORY_API_RATE_LIMIT_ERROR = "INVENTORY_API_RATE_LIMIT_ERROR"
	INVENTORY_API_SERVICE_ERROR    = "INVENTORY_API_SERVICE_ERROR"
	INVENTORY_PRODUCT_NOT_FOUND    = "INVENTORY_PRODUCT_NOT_FOUND"
	INVENTORY_INSUFFICIENT_STOCK   = "INVENTORY_INSUFFICIENT_STOCK"

	// Notification service errors
	NOTIFICATION_API_ERROR         = "NOTIFICATION_API_ERROR"
	NOTIFICATION_API_NETWORK_ERROR = "NOTIFICATION_API_NETWORK_ERROR"
	NOTIFICATION_API_TIMEOUT_ERROR = "NOTIFICATION_API_TIMEOUT_ERROR"
	NOTIFICATION_API_AUTH_ERROR    = "NOTIFICATION_API_AUTH_ERROR"
	NOTIFICATION_API_SERVICE_ERROR = "NOTIFICATION_API_SERVICE_ERROR"
)

// ===== HTTP ERROR CODES =====
const (
	// Client errors (4xx)
	HTTP_BAD_REQUEST          = "HTTP_BAD_REQUEST"
	HTTP_UNAUTHORIZED         = "HTTP_UNAUTHORIZED"
	HTTP_FORBIDDEN            = "HTTP_FORBIDDEN"
	HTTP_NOT_FOUND            = "HTTP_NOT_FOUND"
	HTTP_METHOD_NOT_ALLOWED   = "HTTP_METHOD_NOT_ALLOWED"
	HTTP_CONFLICT             = "HTTP_CONFLICT"
	HTTP_UNPROCESSABLE_ENTITY = "HTTP_UNPROCESSABLE_ENTITY"
	HTTP_TOO_MANY_REQUESTS    = "HTTP_TOO_MANY_REQUESTS"

	// Server errors (5xx)
	HTTP_INTERNAL_SERVER_ERROR = "HTTP_INTERNAL_SERVER_ERROR"
	HTTP_BAD_GATEWAY           = "HTTP_BAD_GATEWAY"
	HTTP_SERVICE_UNAVAILABLE   = "HTTP_SERVICE_UNAVAILABLE"
	HTTP_GATEWAY_TIMEOUT       = "HTTP_GATEWAY_TIMEOUT"
)

// ===== BUSINESS LOGIC ERROR CODES =====
const (
	// Order processing
	ORDER_CREATE_FAILED     = "ORDER_CREATE_FAILED"
	ORDER_UPDATE_FAILED     = "ORDER_UPDATE_FAILED"
	ORDER_CANCEL_FAILED     = "ORDER_CANCEL_FAILED"
	ORDER_PROCESSING_FAILED = "ORDER_PROCESSING_FAILED"
	ORDER_PAYMENT_FAILED    = "ORDER_PAYMENT_FAILED"
	ORDER_INVENTORY_FAILED  = "ORDER_INVENTORY_FAILED"

	// User management
	USER_CREATE_FAILED           = "USER_CREATE_FAILED"
	USER_UPDATE_FAILED           = "USER_UPDATE_FAILED"
	USER_DELETE_FAILED           = "USER_DELETE_FAILED"
	USER_EMAIL_ALREADY_EXISTS    = "USER_EMAIL_ALREADY_EXISTS"
	USER_USERNAME_ALREADY_EXISTS = "USER_USERNAME_ALREADY_EXISTS"
)

// ===== COMPONENT NAMES =====
const (
	ComponentProductService      = "product-service"
	ComponentUserService         = "user-service"
	ComponentOrderService        = "order-service"
	ComponentPaymentService      = "payment-service"
	ComponentInventoryService    = "inventory-service"
	ComponentNotificationService = "notification-service"
	ComponentDatabase            = "database"
	ComponentCache               = "cache"
	ComponentQueue               = "queue"
	ComponentRouter              = "router"
	ComponentMiddleware          = "middleware"
	ComponentValidator           = "validator"
	ComponentSerializer          = "serializer"
	ComponentLogger              = "logger"
	ComponentConfig              = "config"
	ComponentHealth              = "health"
)
